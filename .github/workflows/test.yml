name: test

env:
  DENOPS_TEST_DENOPS_PATH: "../denops.vim"
  DENO_DIR: ".deno"

on:
  push:
    branches:
      - main
    paths:
      - "**/*.ts"
      - "**/*.vim"
      - ".github/workflows/test.yml"
      - "Makefile"
      - "deno.json"
  pull_request:
    paths:
      - "**/*.ts"
      - "**/*.vim"
      - ".github/workflows/test.yml"
      - "Makefile"
      - "deno.json"

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail {0}

jobs:
  test:
    strategy:
      matrix:
        runner:
          # - windows-latest
          # - macos-latest
          - ubuntu-latest
        version:
          - "2.3.0"
          - "2.x"
        host_version:
          - vim: "v9.1.1646"
            nvim: "v0.11.3"
    runs-on: ${{ matrix.runner }}
    steps:
      - run: git config --global init.defaultBranch main
      - run: git config --global core.autocrlf false
        if: runner.os == 'Windows'
      - uses: actions/checkout@v5
        with:
          path: "./repo"
      - uses: actions/checkout@v5
        with:
          repository: "vim-denops/denops.vim"
          path: "./denops.vim"
      - uses: denoland/setup-deno@v2
        with:
          deno-version: "${{ matrix.version }}"
      - uses: actions/cache@v4
        id: cache
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-deno-${{ matrix.version }}-${{ hashFiles('**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-deno-${{ matrix.version }}-
            ${{ runner.os }}-deno-
      - name: Lint check
        working-directory: ./repo
        run: deno task lint
      - name: Format check
        working-directory: ./repo
        run: deno task fmt-check
      - uses: thinca/action-setup-vim@v2
        id: vim
        with:
          vim_type: "Vim"
          vim_version: "${{ matrix.host_version.vim }}"
          download: "never"
      - name: Check Vim
        run: |
          echo ${DENOPS_TEST_VIM}
          ${DENOPS_TEST_VIM} --version
        env:
          DENOPS_TEST_VIM: ${{ steps.vim.outputs.executable_path }}
      - uses: thinca/action-setup-vim@v2
        id: nvim
        with:
          vim_type: "Neovim"
          vim_version: "${{ matrix.host_version.nvim }}"
      - name: Check Neovim
        run: |
          echo ${DENOPS_TEST_NVIM}
          ${DENOPS_TEST_NVIM} --version
        env:
          DENOPS_TEST_NVIM: ${{ steps.nvim.outputs.executable_path }}
      - name: Test
        working-directory: ./repo
        run: deno task test
        env:
          DENO_DIR: ../.deno
          DENOPS_TEST_VIM: ${{ steps.vim.outputs.executable_path }}
          DENOPS_TEST_NVIM: ${{ steps.nvim.outputs.executable_path }}
        timeout-minutes: 5
